1、首先在github服务器建立仓库
2、在本地Github文件夹内执行git clone xxx命令将远程服务器的文件夹克隆到本地
举例：git clone https://github.com/uhayate/TDD-with-Python.git 至此，可以将TDD-with-Python这个仓库克隆到本地
3、进入TDD-with-Python这个文件夹，
假如现在我在这个文件夹写了代码，欲将本地代码同步到服务器端
命令1：git add .
注：这个命令把你修改的文件放进了git的暂存区
.表示所有文件，是一种简单方法，这会导致这次所有修改的文件一起提交，并且造成问题。
命令2：git commit -m "注释"
是将暂存区的文件加上同样的注释。这就是造成的问题，比如这次你的两个文件并不想使用同一个注释。想分别注释的话就要分别git add
命令3： git push origin master
这个命令是提交到主干，如果提交到分支要改变master名字，写对应的分支名字


假如你要删除服务器端文件，
1、git rm 文件名
2、git commit -m "注释" 
3、git push origin master

文件修改：
1.运行git status命令,可以让我们时刻掌握仓库当前的状态，有没有需要提交的

2.git diff NAME顾名思义就是查看difference

3.提交修改和提交新文件是一样的两步，第一步是git add NAME

4.$ git commit -m "add distributed"

查看修改：
git log命令显示从最近到最远的提交日志

回退版本
1.首先，Git必须知道当前版本是哪个版本，在Git中，用HEAD表示当前版本，也就是最新的提交3628164...882e1e0（注意我的提交ID和你的肯定不一样），上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。

2.回退到上一个版本
$ git reset --hard HEAD^

3.查看当前版本
$ cat NAME

4.恢复最新版本
$ git reset --hard （3628164部分版本号）asdfgsdfzxdfsdfsdfasaff